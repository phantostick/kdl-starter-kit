// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "windows", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cms {
  id                    BigInt   @id @default(autoincrement())
  slug                  String
  parent                String?
  type                  String?
  custom_url            String?
  banner_image          String?
  banner_image_alt_text String?
  banner_title          String?
  banner_tagline        String?
  short_description     String?
  content               String?
  gallery               String?
  main_menu             Int?
  top_menu              Int?
  side_menu             Int?
  footer_menu           Int?
  publish               Int?
  sort                  BigInt?
  created_at            DateTime @default(now())
  updated_at            DateTime @default(now())

  seo seo[]
}

model users {
  id         BigInt   @id @default(autoincrement())
  name       String
  mobile     String
  email      String
  password   String
  address    String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model seo {
  id              BigInt   @id @default(autoincrement())
  cms_id          BigInt?
  seo_title       String?
  seo_keywords    String?
  seo_description String?
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now())

  cms cms? @relation(fields: [cms_id], references: [id], onDelete: SetNull)
}

model clients {
  id           BigInt   @id @default(autoincrement())
  client_name  String
  email        String
  mobile       String
  company_name String?
  password     String
  address      String?
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now())

  invoices      invoices[]
  transactions  transactions[]
  subscriptions subscriptions[]
}

model invoice_details {
  id         BigInt   @id @default(autoincrement())
  name       String
  amount     String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  invoices invoices[]
}

model invoices {
  id                 BigInt    @id @default(autoincrement())
  client_id          BigInt
  invoice_no         String
  amount             String?
  tax                String?
  gst                String?
  mail_sent          Int?
  issue_date         DateTime?
  due_date           DateTime?
  payment_status     String?
  invoice_details_id BigInt
  created_at         DateTime  @default(now())
  updated_at         DateTime  @default(now())

  client         clients         @relation(fields: [client_id], references: [id])
  invoice_detail invoice_details @relation(fields: [invoice_details_id], references: [id])
  transactions   transactions[]
}

model subscriptions {
  id          BigInt   @id @default(autoincrement())
  client_id   BigInt
  title       String
  amount      String
  description String?
  sub_title   String?
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())

  client clients @relation(fields: [client_id], references: [id])
}

model payment_methods {
  id                  BigInt   @id @default(autoincrement())
  payment_method_name String
  display_name        String
  slug                String
  sandbox_key         String?
  sandbox_secret      String?
  live_key            String?
  live_secret         String?
  publish             Int?
  sort                BigInt?
  created_at          DateTime @default(now())
  updated_at          DateTime @default(now())

  transactions transactions[]
}

model transactions {
  id                BigInt    @id @default(autoincrement())
  client_id         BigInt
  invoice_id        BigInt
  payment_method_id BigInt?
  amout             String?
  payment_status    String?
  payment_date      DateTime?
  created_at        DateTime  @default(now())
  updated_at        DateTime  @default(now())

  client         clients          @relation(fields: [client_id], references: [id])
  invoice        invoices         @relation(fields: [invoice_id], references: [id])
  payment_method payment_methods? @relation(fields: [payment_method_id], references: [id])
}

model settings {
  id         BigInt   @id @default(autoincrement())
  name       String
  slug       String
  value      String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}
